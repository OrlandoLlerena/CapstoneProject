{"version":3,"sources":["helper/helper.js","components/ClueModal/ClueModal.jsx","components/Gameboard/Gameboard.jsx","components/SignupModal/SignupModal.jsx","components/LoginModal/LoginModal.jsx","components/Home/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["shuffle","a","j","x","i","length","Math","floor","random","ClueModal","props","useState","userAnswer","setUserAnswer","question","current","toUpperCase","answer","className","Modal","dialogClassName","centered","size","Body","onSubmit","e","preventDefault","type","name","onChange","target","value","correct","onClick","handleSubmit","Gameboard","score","setScore","category","setCategory","clue","setClue","setCurrent","modalShow","setModalShow","setCorrect","offset","catAndQuestions","axios","get","data","categoryIds","map","id","getClues","ids","categoryArray","clueObj","temp","Promise","resolve","reject","then","all","result","forEach","categoryIndex","newCategory","title","clues","splice","hint","index","modalId","push","used","error","console","log","handleModalClose","useEffect","to","cat","uppercaseCategory","handleClick","onHide","show","close","SignupModal","backdrop","Header","closeButton","Title","placeholder","signupChange","LoginModal","loginChange","Home","showSignup","setSignupShow","showLogin","setLoginShow","handleSignupModalClose","handleLoginModalClose","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad9f7035.chunk.js","sourcesContent":["export function shuffle(a) {\r\n  let j, x, i;\r\n  for (i = a.length - 1; i > 0; i--) {\r\n    j = Math.floor(Math.random() * (i + 1));\r\n    x = a[i];\r\n    a[i] = a[j];\r\n    a[j] = x;\r\n  }\r\n  return a;\r\n}\r\n","import React, { useState, useRef } from \"react\";\r\nimport \"./ClueModal.scss\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nconst ClueModal = (props) => {\r\n  const [userAnswer, setUserAnswer] = useState(\"\");\r\n\r\n  let question = props.current?.question.toUpperCase();\r\n  let answer = props.current?.answer.toUpperCase();\r\n\r\n  return (\r\n    <div className=\"question-modal\">\r\n      <div>\r\n        <Modal\r\n          className=\"screen\"\r\n          {...props}\r\n          dialogClassName=\"modal-90w\"\r\n          centered\r\n          size=\"lg\"\r\n        >\r\n          <Modal.Body className=\"modal-custom\">\r\n            <h1 className=\"clue-info\">{question}</h1>\r\n            <form\r\n              onSubmit={(e) => {\r\n                e.preventDefault();\r\n              }}\r\n              // onSubmit={() => props.handleSubmit(userAnswer)}\r\n              // onSubmit={props.handleSubmit}\r\n            >\r\n              <input\r\n                className=\"player-answer\"\r\n                type=\"text\"\r\n                name=\"inputAnswer\"\r\n                onChange={(e) => setUserAnswer(e.target.value)}\r\n              />\r\n            </form>\r\n            <div className=\"modal-inner\">\r\n              <div className=\"results\">\r\n                <div\r\n                  className={\r\n                    props.correct === true ? \"results-correct\" : \"none\"\r\n                  }\r\n                >\r\n                  <p className=\"result-correct\">CORRECT</p>\r\n                  <span className=\"results-answer-sytle\">{answer}</span>\r\n                </div>\r\n                <div\r\n                  className={props.correct === false ? \"results-wrong\" : \"none\"}\r\n                >\r\n                  <p className=\"result-wrong\">INCORRECT</p>\r\n                  <p className=\"results-answer\">\r\n                    The correct answer is:\r\n                    <br />\r\n                    <span className=\"results-answer-sytle\">{answer}</span>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Modal.Body>\r\n          <button\r\n            className={props.correct === null ? \"custom-submit\" : \"none\"}\r\n            type=\"submit\"\r\n            onClick={() => props.handleSubmit(userAnswer)}\r\n          >\r\n            Answer\r\n          </button>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClueModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./gameboard.scss\";\r\nimport axios from \"axios\";\r\nimport { shuffle } from \"../../helper/helper\";\r\nimport ClueModal from \"../../components/ClueModal/ClueModal\";\r\n\r\nconst Gameboard = () => {\r\n  // setting the state using hooks below\r\n  // const [player, setPlayer] = useState(null);\r\n  const [score, setScore] = useState(0);\r\n  const [category, setCategory] = useState(null);\r\n  const [clue, setClue] = useState(null);\r\n  const [current, setCurrent] = useState(null);\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const [correct, setCorrect] = useState(null);\r\n\r\n  // populates the category\r\n\r\n  const offset = Math.floor(Math.random() * 15000);\r\n\r\n  const catAndQuestions = async () => {\r\n    const { data } = await axios.get(\r\n      `https://jservice.io/api/categories?count=5&offset=${offset}`\r\n    );\r\n    const categoryIds = data.map((category) => category.id);\r\n    categoryIds.map((id) => {\r\n      return id;\r\n    });\r\n    getClues(categoryIds);\r\n  };\r\n\r\n  // populates the questions\r\n  async function getClues(ids) {\r\n    let categoryArray = [];\r\n    let clueObj = {};\r\n    try {\r\n      const temp = ids.map(async (id) => {\r\n        return new Promise((resolve, reject) => {\r\n          axios\r\n            .get(`https://jservice.io/api/category?id=${id}`)\r\n            .then((data) => {\r\n              resolve(data);\r\n            });\r\n        });\r\n      });\r\n      Promise.all(temp).then((result) => {\r\n        result.forEach((result, categoryIndex) => {\r\n          let newCategory = {\r\n            title: result.data.title,\r\n            clue: [],\r\n          };\r\n          let newClue = shuffle(result.data.clues)\r\n            .splice(0, 5)\r\n            .forEach((hint, index) => {\r\n              let modalId = categoryIndex + \"-\" + index;\r\n              newCategory.clue.push(modalId);\r\n              clueObj[modalId] = {\r\n                id: modalId,\r\n                question: hint.question,\r\n                answer: hint.answer,\r\n                value: (index + 1) * 100,\r\n                used: false,\r\n              };\r\n            });\r\n          categoryArray.push(newCategory);\r\n        });\r\n        setCategory(categoryArray);\r\n        setClue(clueObj);\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  const handleClick = (question) => {\r\n    console.log(question);\r\n    setCurrent(question);\r\n    setModalShow(true);\r\n    setCorrect(null);\r\n    question.used = true;\r\n  };\r\n\r\n  const handleSubmit = (userAnswer) => {\r\n    if (userAnswer === current.answer) {\r\n      //handle logic if its true\r\n      setScore(current.value + score);\r\n      setCorrect(true);\r\n    } else {\r\n      //handle logic if its false\r\n      setScore(score - current.value);\r\n      setCorrect(false);\r\n    }\r\n  };\r\n\r\n  const handleModalClose = () => {\r\n    setModalShow(false);\r\n  };\r\n\r\n  // Use effects and useState will go here\r\n  useEffect(() => {\r\n    catAndQuestions();\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"boardcontainer\">\r\n      <div>\r\n        <Link to=\"/\" className=\"exit\">\r\n          HOME\r\n        </Link>\r\n      </div>\r\n      <div className=\"header-container\">\r\n        <h1 className=\"player\">Guest Player</h1>\r\n        <p className=\"score\">\r\n          Score <span className=\"score-counter\">{score}</span>\r\n        </p>\r\n      </div>\r\n\r\n      <section className=\"board\">\r\n        <div className=\"category-box\">\r\n          <div className=\"boardbox\">\r\n            {category?.map((cat, i) => {\r\n              let uppercaseCategory = cat.title.toUpperCase();\r\n              return (\r\n                <div>\r\n                  <div className=\"boardboxTest\">\r\n                    <h5 key={i} className=\"category\">\r\n                      {uppercaseCategory}\r\n                    </h5>\r\n                  </div>\r\n                  {cat.clue.map((id, i) => {\r\n                    let question = clue?.[id];\r\n                    return (\r\n                      <div className=\"boardboxTest\">\r\n                        <h5\r\n                          key={i}\r\n                          className={question?.used ? \"used\" : \"money\"}\r\n                          onClick={() => {\r\n                            handleClick(question);\r\n                          }}\r\n                        >\r\n                          ${question?.value}\r\n                        </h5>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <ClueModal\r\n        onHide={handleModalClose}\r\n        show={modalShow}\r\n        close={handleModalClose}\r\n        current={current}\r\n        handleSubmit={handleSubmit}\r\n        correct={correct}\r\n      />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Gameboard;\r\n","import React from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport \"./SignupModal.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst SignupModal = (props) => {\r\n  return (\r\n    <section className=\"signup-modal\">\r\n      <div>\r\n        <Modal\r\n          {...props}\r\n          backdrop=\"static\"\r\n          dialogClassName=\"modal-90w\"\r\n          className=\"custom-modal\"\r\n          centered\r\n        >\r\n          <Modal.Header className=\"custom\" closeButton>\r\n            <Modal.Title id=\"modal-title\">SIGN UP</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body className=\"custom\">\r\n            <div>\r\n              <form>\r\n                <p>\r\n                  Welcome new Jeopardy Player. Please fill out the information\r\n                  below in order to proceed.\r\n                </p>\r\n                <h4>First Name</h4>\r\n                <input\r\n                  className=\"custom-field\"\r\n                  type=\"text\"\r\n                  placeholder=\"First Name\"\r\n                />\r\n                <h4>Last Name</h4>\r\n                <input\r\n                  className=\"custom-field\"\r\n                  type=\"text\"\r\n                  placeholder=\"Last Name\"\r\n                />\r\n                <h4>Email</h4>\r\n                <input\r\n                  className=\"custom-field\"\r\n                  type=\"text\"\r\n                  placeholder=\"Email\"\r\n                />\r\n                <h4>Password</h4>\r\n                <input\r\n                  className=\"custom-field\"\r\n                  type=\"text\"\r\n                  placeholder=\"Password\"\r\n                />\r\n                <h4>Confirm Password</h4>\r\n                <input\r\n                  className=\"custom-field\"\r\n                  type=\"text\"\r\n                  placeholder=\"Confirm Password\"\r\n                />\r\n              </form>\r\n\r\n              <div className=\"btn-container\">\r\n                <div className=\"btn-box\">\r\n                  <button className=\"close-btn\">Close</button>\r\n                  <button className=\"submit-btn\">Submit</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <p>\r\n              {\" \"}\r\n              IF YOU'RE ALREADY A MEMBER PLEASE{\" \"}\r\n              <Link className=\"link\" to=\"\" onClick={props.signupChange}>\r\n                LOGIN HERE.\r\n              </Link>\r\n            </p>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SignupModal;\r\n","import React from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport \"./LoginModal.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst LoginModal = (props) => {\r\n  return (\r\n    <section className=\"signup-modal\">\r\n      <div>\r\n        <Modal\r\n          {...props}\r\n          backdrop=\"static\"\r\n          dialogClassName=\"modal-90w\"\r\n          centered\r\n        >\r\n          <Modal.Header className=\"custom\" closeButton>\r\n            <Modal.Title id=\"custom-modal\">Member Login screen</Modal.Title>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body className=\"custom\">\r\n            <div>\r\n              <p>Welcome back member please login below:</p>\r\n              <form>\r\n                <h4>Email</h4>\r\n                <input\r\n                  className=\"custom-field\"\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Email\"\r\n                />\r\n                <h4>Password</h4>\r\n                <input\r\n                  className=\"custom-field\"\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Password\"\r\n                />\r\n              </form>\r\n            </div>\r\n            <div className=\"btn-container\">\r\n              <div className=\"btn-box\">\r\n                <button className=\"close-btn\">Close</button>\r\n                <button className=\"submit-btn\">Submit</button>\r\n              </div>\r\n            </div>\r\n            <p>\r\n              FI YOU ARE NOT A MEMBER PLEASE:{\" \"}\r\n              <Link className=\"link\" to=\"\" onClick={props.loginChange}>\r\n                SIGN UP NOW!\r\n              </Link>\r\n            </p>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default LoginModal;\r\n","import React, { useState } from \"react\";\r\nimport \"./home.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SignupModal from \"../SignupModal/SignupModal\";\r\nimport LoginModal from \"../LoginModal/LoginModal\";\r\n\r\nfunction Home() {\r\n  const [showSignup, setSignupShow] = useState(false);\r\n  const [showLogin, setLoginShow] = useState(false);\r\n\r\n  // Signup modal functions\r\n  const handleSinupModalOpen = () => {\r\n    setSignupShow(true);\r\n  };\r\n  const handleSignupModalClose = () => {\r\n    setSignupShow(false);\r\n  };\r\n  const handleSignupChange = () => {\r\n    setSignupShow(false);\r\n    setLoginShow(true);\r\n  };\r\n\r\n  // Login modal functions\r\n  const handleLoginModalOpen = () => {\r\n    setLoginShow(true);\r\n  };\r\n  const handleLoginModalClose = () => {\r\n    setLoginShow(false);\r\n  };\r\n  const handleLoginModalChange = () => {\r\n    setLoginShow(false);\r\n    setSignupShow(true);\r\n  };\r\n\r\n  return (\r\n    <section className=\"home-background\">\r\n      <div className=\"buttons-container\">\r\n        <Link to=\"/game\">\r\n          <button className=\"guest\">PLAY AS GUEST</button>\r\n        </Link>\r\n\r\n        <button\r\n          className=\"signup\"\r\n          onClick={() => {\r\n            handleSinupModalOpen();\r\n          }}\r\n        >\r\n          SIGN UP\r\n        </button>\r\n\r\n        <button\r\n          className=\"login\"\r\n          onClick={() => {\r\n            handleLoginModalOpen();\r\n          }}\r\n        >\r\n          LOGIN\r\n        </button>\r\n      </div>\r\n\r\n      <SignupModal\r\n        onHide={handleSignupModalClose}\r\n        show={showSignup}\r\n        close={handleSignupModalClose}\r\n        signupChange={handleSignupChange}\r\n      />\r\n\r\n      <LoginModal\r\n        onHide={handleLoginModalClose}\r\n        show={showLogin}\r\n        close={handleLoginModalClose}\r\n        loginChange={handleLoginModalChange}\r\n      />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\nimport \"./App.scss\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Gameboard from \"./components/Gameboard/Gameboard.jsx\";\nimport Home from \"./components/Home/Home.jsx\";\n\nfunction App() {\n  return (\n    <Router>\n      <section id=\"container\">\n        <Switch>\n          <Route exact path=\"/game\" component={Gameboard} />\n          {/* <Route exact path=\"/login\" components={Login} /> */}\n          <Route exact path=\"/\" component={Home} />\n        </Switch>\n      </section>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}